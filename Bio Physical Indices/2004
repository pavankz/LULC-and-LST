/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var aoi = ee.FeatureCollection("users/b171905/Study_Area");
/***** End of imports. If edited, may not auto-convert in the playground. *****/
// Applies scaling factors.
function applyScaleFactors(image) {
var opticalBands = image.select('SR_B.').multiply(0.0000275).add(-0.2);
var thermalBands = image.select('ST_B.*').multiply(0.00341802).add(149.0);
return image.addBands(opticalBands, null, true)
          .addBands(thermalBands, null, true);
}

//cloud mask
function maskL8sr(col) {
// Bits 3 and 5 are cloud shadow and cloud, respectively.
var cloudShadowBitMask = (1 << 3);
var cloudsBitMask = (1 << 5);
// Get the pixel QA band.
var qa = col.select('QA_PIXEL');
// Both flags should be set to zero, indicating clear conditions.
var mask = qa.bitwiseAnd(cloudShadowBitMask).eq(0)
             .and(qa.bitwiseAnd(cloudsBitMask).eq(0));
return col.updateMask(mask);
}

var startDate = '2004-05-01'
var endDate = '2004-05-31'


// Filter the collection, first by the aoi, and then by date.
var dataset = ee.ImageCollection('LANDSAT/LT05/C02/T1_L2')
.filterDate(startDate, endDate)
.filterBounds(aoi)
.map(applyScaleFactors)
.map(maskL8sr)
.median();

print(dataset);

var area = dataset.clip(aoi);

var visualization = {
bands: ['SR_B3', 'SR_B2', 'SR_B1'],
min: 0.0,
max: 0.3,
};

Map.addLayer(area, visualization, 'True Color (321)', false);

var red = area.select('SR_B3')
var green = area.select('SR_B2')
var blue = area.select('SR_B1')
var nir = area.select('SR_B4')
var swir = area.select('SR_B5')
var swir2 = area.select('SR_B7')
var tirs = area.select('ST_B6')


//////////////Vegetation Biophysical Indices
// Normalized Difference Vegetatio Index
var ndvi = area.normalizedDifference(['SR_B4', 'SR_B3'])
  .rename('ndvi')
var ndviParams =  {min:-1, max:1, palette:['blue', 'white', 'green']};
Map.addLayer(ndvi, ndviParams, 'NDVI');

//Soil Adjusted Vegetation Index
var savi = nir.subtract(red).divide(nir.add(red).add(0.5)).multiply(1.5).rename('savi');
var saviParams = {min: -1, max: 1, palette: ['red', 'green','yellow']};
Map.addLayer(savi, saviParams, 'SAVI');

//Greenness vegetation index
var green = blue.multiply(-0.294).subtract(green.multiply(0.243)).subtract(red.multiply(0.5424).add(nir.multiply(0.7276))
  .rename('Greenness'));

/////////////////Urban Biophysical Indices
//Normalized Difference Builtup Inddex
var ndbi = swir.subtract(nir).divide(swir.add(nir).rename('ndbi'));
var ndbiParams = {min:-1, max:1, palette: ['blue', 'red', 'green']};
Map.addLayer(ndbi, ndbiParams, 'NDBI')

//Normalized Difference Bareness Index
var ndbal = swir.subtract(tirs).divide(swir.add(tirs)).rename('NDBal');

//Dry builtup Index
var dbi = blue.subtract(tirs).divide(blue.add(tirs)).subtract(ndvi).rename('DBI');

//Albedo calculation
var albedo = (blue.multiply(0.356).add(red.multiply(0.130)).add(nir.multiply(0.373)).add(swir.multiply(0.085)).add(swir2.multiply(0.072)).subtract(0.018)).divide(1.016).rename('Albedo');
  

///////Exporting Vegetation Biophysical Parameters
Export.image.toDrive({
  description: 'NDVI2004',
  image: ndvi,
  folder: 'New_Indices',
  scale: 30,
  crs: 'EPSG:32644',
  region: aoi,
  maxPixels: 1e12,
  fileFormat: 'GeoTIFF'
})
Export.image.toDrive({
  description: 'SAVI2004',
  image: savi,
  folder: 'New_Indices',
  crs: 'EPSG:32644',
  scale: 30,
  region: aoi,
  maxPixels: 1e12,
  fileFormat: 'GeoTIFF'
})
Export.image.toDrive({
  description: 'Greenness2004',
  image: green,
  folder: 'New_Indices',
 crs: 'EPSG:32644',  
  scale: 30,
  region: aoi,
  maxPixels: 1e12,
  fileFormat: 'GeoTIFF'
})

//////Exporting Urban Biophysical Indices
Export.image.toDrive({
  description: 'NDBI2004',
  image: ndbi,
  folder: 'New_Indices',
  crs: 'EPSG:32644',  
  scale: 30,
  region: aoi,
  maxPixels: 1e12,
  fileFormat: 'GeoTIFF'
})
Export.image.toDrive({
  description: 'NDBal2004',
  image: ndbal,
  folder: 'New_Indices',
  scale: 30,
  crs: 'EPSG:32644',
  region: aoi,
  maxPixels: 1e12,
  fileFormat: 'GeoTIFF'
})
Export.image.toDrive({
  description: 'DBI2004',
  image: dbi,
  folder: 'New_Indices',
  scale: 30,
  region: aoi,
  crs: 'EPSG:32644',
  maxPixels: 1e12,
  fileFormat: 'GeoTIFF'
})
Export.image.toDrive({
  description: 'Albedo2004',
  image: albedo,
  folder: 'New_Indices',
  scale: 30,
  crs: 'EPSG:32644',
  region: aoi,
  maxPixels: 1e12,
  fileFormat: 'GeoTIFF'
})